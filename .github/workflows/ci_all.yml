# Run CI on all Zeek packages
name: Zeek Package CI

on:
  push:
  schedule:
    - cron:  '0 4 * * *'

jobs:
  get_zkgs:
    name: Get package list
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.zkg_list.outputs.packages }}
    steps:
      - id: install
        run: pip install zkg
      - id: zkg_list
        run: | 
          echo "packages={\"packages\":[$($HOME/.local/bin/zkg list all | head -n 5 | awk '{print "\"" $1 "\""}' | paste -d, -s -)]}" >> $GITHUB_OUTPUT

  run_ci:
    name: Test ${{ matrix.packages }}
    needs: get_zkgs
    continue-on-error: true
    runs-on: ubuntu-latest
    container:
      image: zeek/zeek
    strategy:
      matrix: ${{fromJson(needs.get_zkgs.outputs.packages)}}
      fail-fast: false
    outputs:
      package: "${{ steps.zkg_test.outputs.DOP_TEST }}"
      all_stuff: "${{ matrix.package }}"
      blaa: "${{ steps.zkg_test.outputs.BLAA }}"
    steps:
    - uses: actions/checkout@v1
    - id: doptest
      run: |
        export PATH=/usr/local/zeek/bin:$HOME/.local/bin:$PATH
        zeek --version
        zkg test ${{ matrix.packages }} || true
        export SHORT_NAME=`echo "${{ matrix.packages }}" |awk -F/ '{ print $3 }' | sed -e 's/-plugin//'`
        cat /usr/local/zeek/var/lib/zkg/logs/$SHORT_NAME-plugin-build.log
    - id: zkg_test
      run: |
        export PATH=/usr/local/zeek/bin:$HOME/.local/bin:$PATH
        echo zkg test ${{ matrix.packages }} || $GITHUB_WORKSPACE/debug.sh ${{ matrix.packages }}
        echo "${{ matrix.packages }}=[{\"${{ matrix.packages }}\": {\"status\": \"passed\"}}]" >> $GITHUB_OUTPUT
        echo "${{ matrix.packages }}" > test_data
        echo "${{ matrix.packages }}" | tr "/" "_" | awk '{ print "BLAA=" $1 }' >> $GITHUB_OUTPUT
        echo "DOP_TEST=DOP_VALUE_${{ matrix.packages}}" >> $GITHUB_OUTPUT
    - uses: actions/upload-artifact@v3
      with:
        name: ${{ steps.zkg_test.outputs.blaa }}
        path: test_data
        if-no-files-found: warn
    - id: zkg_test2
      run: |
        echo "blaa"

  summary:
    name: Summarize Results
    needs: run_ci
    # We force this to run, even if run_ci jobs have failed
    if: true
    runs-on: ubuntu-20.04
    env:
      NEEDS_CONTEXT: ${{ toJson(needs) }}
    steps:
      - uses: actions/download-artifact@v3
      - run: |
          echo "$(cat */test_data)"
        id: retrieve_data
      - run: echo "DOP ${{ needs.run_ci.outputs.all_stuff }}"
      - run: echo "DOP2 ${{ needs.run_ci.outputs.package }}"
      - run: env
